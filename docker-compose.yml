
services:
  order-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: order-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - order-network

  order-kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: order-kafka
    depends_on:
      - order-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: order-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://order-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - order-network

  order-postgres:
    image: postgres:14-alpine
    container_name: order-postgres
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - order-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order-service
    depends_on:
      order-postgres:
        condition: service_healthy
      order-kafka:
        condition: service_started
    environment:
      # Sử dụng tên service của Docker, không dùng 'localhost'
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-postgres:5432/order_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_KAFKA_BOOTSTRAP_SERVERS: order-kafka:9092
    ports:
      # Ánh xạ port 8081 của máy bạn (host) sang port 8081 của container
      - "8088:8081"
    networks:
      - order-network
    healthcheck:
      # Cập nhật port healthcheck sang 8081
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  order-network:
    driver: bridge